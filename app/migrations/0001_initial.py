# Generated by Django 5.2.7 on 2025-10-05 00:32

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('city', models.CharField(help_text='Ej: Monterrey', max_length=100)),
                ('state_province', models.CharField(blank=True, help_text='Ej: N.L. / Esp', max_length=100, null=True)),
                ('country', models.CharField(blank=True, help_text='Ej: Mexico / Esp', max_length=100, null=True)),
                ('latitude', models.DecimalField(decimal_places=6, max_digits=9)),
                ('longitude', models.DecimalField(decimal_places=6, max_digits=9)),
            ],
            options={
                'verbose_name': 'Ubicación',
                'verbose_name_plural': 'Ubicaciones',
                'unique_together': {('latitude', 'longitude')},
            },
        ),
        migrations.CreateModel(
            name='DailyForecast',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(default=django.utils.timezone.now)),
                ('current_temp', models.DecimalField(decimal_places=1, help_text='Temperatura actual (33°)', max_digits=4)),
                ('condition_summary', models.CharField(help_text='Ej: Partly cloudy', max_length=100)),
                ('max_temp', models.DecimalField(decimal_places=1, help_text='Temperatura máxima del día', max_digits=4)),
                ('min_temp', models.DecimalField(decimal_places=1, help_text='Temperatura mínima del día', max_digits=4)),
                ('feels_like_temp', models.DecimalField(decimal_places=1, help_text='Sensación térmica (39°C)', max_digits=4)),
                ('humidity', models.IntegerField(help_text='Humedad en % (59%)')),
                ('precipitation_prob', models.IntegerField(help_text='Probabilidad de lluvia en % (21%)')),
                ('wind_speed', models.DecimalField(decimal_places=1, help_text='Velocidad del viento (9 km/h)', max_digits=4)),
                ('wind_direction', models.CharField(help_text='Ej: WSW', max_length=10)),
                ('visibility', models.DecimalField(decimal_places=1, help_text='Visibilidad en millas o km (10 mi)', max_digits=4)),
                ('pressure', models.DecimalField(decimal_places=2, help_text='Presión', max_digits=5)),
                ('uv_index', models.CharField(default='Low 0', max_length=50)),
                ('air_quality', models.CharField(default='Low 0', max_length=50)),
                ('dew_point', models.DecimalField(decimal_places=1, help_text='Punto de rocío (56°)', max_digits=4)),
                ('clouds', models.DecimalField(decimal_places=1, help_text='Nubosidad (56°)', max_digits=4)),
                ('sunrise', models.TimeField()),
                ('sunset', models.TimeField()),
                ('summary', models.TextField(blank=True, help_text='Resumen del día (Winds from SW to SSW...)', null=True)),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='daily_forecasts', to='app.location')),
            ],
            options={
                'verbose_name': 'Pronóstico Diario',
                'verbose_name_plural': 'Pronósticos Diarios',
                'unique_together': {('location', 'date')},
            },
        ),
        migrations.CreateModel(
            name='WeatherAlert',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(help_text='Ej: Sandstorm, Extreme Heat', max_length=100)),
                ('start_time', models.TimeField(help_text='Hora de inicio de la alerta (Ej: 21:00, 19:00)')),
                ('date', models.DateField(help_text='Fecha de la alerta (Ej: Sep 12)')),
                ('details', models.CharField(help_text='Ej: ssw 11 km/h', max_length=100)),
                ('probability', models.IntegerField(help_text='Probabilidad de ocurrencia en % (Ej: 30%, 80%)')),
                ('daily_forecast', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='alerts', to='app.dailyforecast')),
            ],
            options={
                'verbose_name': 'Alerta Climática',
                'verbose_name_plural': 'Alertas Climáticas',
            },
        ),
        migrations.CreateModel(
            name='HourlyForecast',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time', models.TimeField()),
                ('temperature', models.DecimalField(decimal_places=1, max_digits=4)),
                ('condition', models.CharField(help_text='Ej: Partly cloudy', max_length=100)),
                ('precipitation_perc', models.IntegerField(help_text='Precipitación en %')),
                ('daily_forecast', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='hourly_forecasts', to='app.dailyforecast')),
            ],
            options={
                'verbose_name': 'Pronóstico por Hora',
                'verbose_name_plural': 'Pronósticos por Hora',
                'unique_together': {('daily_forecast', 'time')},
            },
        ),
        migrations.CreateModel(
            name='FavoriteLocation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='favorite_locations', to=settings.AUTH_USER_MODEL)),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.location')),
            ],
            options={
                'verbose_name': 'Ubicación Favorita',
                'verbose_name_plural': 'Ubicaciones Favoritas',
                'unique_together': {('user', 'location')},
            },
        ),
    ]
